name: Update Stable Docs

on:
  release:
    types: [published]
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  update_stable_docs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # We need all commits to find docs/ changes
    - name: Set up Git user
      run: |
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"

    - name: Check if stable-docs branch exists
      run: |
        if ! git ls-remote --heads origin stable-docs | grep stable-docs; then
          git checkout -b stable-docs
          git push -u origin stable-docs
        fi

    - name: Handle Release
      if: github.event_name == 'release'
      run: |
        git fetch --all
        git checkout stable-docs
        git reset --hard ${GITHUB_REF#refs/tags/}
        git push origin stable-docs --force

    - name: Handle Commit to Main
      if: contains(github.event.head_commit.message, '!stable-docs')
      run: |
        git fetch origin
        git checkout -b stable-docs origin/stable-docs
        # !stable-docs should only be in the one commit, so apply changes from that commit
        PATCH=$(git show ${{ github.sha }} -- docs/)
        # Check if patch is non-empty
        if [[ -n "$PATCH" ]]; then
          echo "$PATCH" | git apply -
          git add docs/
          git commit -m "Cherry-picked docs changes from ${{ github.sha }}"
          git push origin stable-docs
        else
          echo "No changes to docs/ in this commit."
          exit 0
        fi
